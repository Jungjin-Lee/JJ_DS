// Private
var players = new Array();
var container = new Array();

function makePlayer() {
    this.socket = null;
    this.remoteAddress = null;
    this.remotePort = null;
    this.id = null;
    this.name = null;
}

// Public
module.exports = {
    Logging: true,

    getPlayerCnt: function () {
        return players.length;
    },

    make: function() {
        var player = new makePlayer();
        this.push(player);
        return player;
    },

    push: function(player) {
        players.push(player);
    },

    getPlayerAtSock: function(sock) {
        var len = players.length;
        for(var i = 0; i < len; i++) {
            var player = players[i];
            if(player.remoteAddress == sock.remoteAddress && player.remotePort == sock.remotePort) {
                player.index = i;
                return player;
            }
        }
        return null;
    },

    remove: function(index, player) {
        players.splice(index, 1);
        container.push(player);

    },

    clear: function(player) {
        if(player.isRoom) {
            if(player.slot == 1) {
                player.room.player1 = null;
            } else {
                player.room.player2 = null;
            }

            if(player.room.playerCnt == 1) {
                player.room.isEmpty = true;
            } else {

            }

            player.slot = 0;
            player.isRoom = false;
        }
        console.log("clear");
    }
}
